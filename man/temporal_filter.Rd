% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/postprocess_functions.R
\name{temporal_filter}
\alias{temporal_filter}
\title{Apply temporal filtering to a 4D NIfTI image}
\usage{
temporal_filter(
  in_file,
  prefix = "f",
  low_pass_hz = 0,
  high_pass_hz = 1/120,
  tr = NULL,
  overwrite = FALSE,
  log_file = NULL,
  fsl_img = NULL
)
}
\arguments{
\item{in_file}{Path to the input 4D NIfTI file.}

\item{prefix}{Character string prefix to prepend to the output file.}

\item{low_pass_hz}{Low-pass filter cutoff in Hz. Use \code{0} to skip.}

\item{high_pass_hz}{High-pass filter cutoff in Hz. Use \code{Inf} to skip.}

\item{tr}{Repetition time (TR) in seconds. Required to convert Hz to volumes.}

\item{overwrite}{Logical; whether to overwrite the output file if it exists.}

\item{log_file}{Optional path to a log file for command output.}

\item{fsl_img}{Optional Singularity image to execute FSL commands in a containerized environment.}
}
\value{
The path to the temporally filtered output NIfTI file.
}
\description{
Uses FSL's \code{fslmaths -bptf} to apply high-pass and/or low-pass temporal filtering
to an fMRI time series. The filter cutoffs are specified in Hz and internally converted
to sigma values in volumes using a standard FWHM-to-sigma transformation.
}
\details{
The mean image is added back after filtering to preserve signal intensity. Filtering
is skipped if the output file already exists and \code{overwrite = FALSE}.
}
\keyword{internal}
