#!/bin/bash
set -e

#this script depends on key environment variables already being sourced externally (see preprocess_study.sh)

#source ~/.bashrc
#setup master connection to remote
#ls $HOME/.ssh/controlmasters/*WPC-6290* 2>/dev/null 1>/dev/null || ./remote.expect

#if [[ $# -ne 3 ]]; then
#    echo "Expect three parameters: <remote data directory> <local output directory> <expected subject id regex>"
#    exit 1
#fi

#remote_mrraw_root="${1}"
#local_dir="${2}"
#subid_regex="${3}"
#subid_regex="${4}"

[ -z "${remote_host}" ] && echo "Expect remote_host variable to be set in environment" && exit 1
[ -z "${remote_mrraw_root}" ] && echo "Expect remote_mrraw_root variable to be set in environment" && exit 1
[ -z "${remote_folder_depth}" ] && remote_folder_depth=1 #how many subfolders beneath remote_mrraw_root to look for subjects
[ -z "${subid_regex}" ] && echo "Expect subid_regex variable to be set in environment" && exit 1
[ -z "${loc_mrraw_root}" ] && echo "Expect loc_mrraw_root variable to be set in environment" && exit 1

#[ ! -d "${loc_mrraw_root}" ] && echo "Cannot find local dir: ${loc_mrraw_root}" && exit 1
[ ! -d "${loc_mrraw_root}" ] && echo "Creating local dir: ${loc_mrraw_root}" && mkdir "${loc_mrraw_root}"

[ ! -f "${loc_mrraw_root}/mrraw_dircache" ] && touch "${loc_mrraw_root}/mrraw_dircache" #create empty directory cache if not in place

#obtain list of subject directories on remote
if [ -n "${remote_folder_filter}" ]; then
    #filter out a specific regex pattern (typically folders) on remote host that indicate data not to be copied
    ssh ${remote_host} "find ${remote_mrraw_root} -mindepth ${remote_folder_depth} -maxdepth ${remote_folder_depth} -type d" | grep -Ev "${remote_folder_filter}" | grep -E "${subid_regex}" | sort > "${loc_mrraw_root}/mrraw_dirlist"
else
    ssh ${remote_host} "find ${remote_mrraw_root} -mindepth ${remote_folder_depth} -maxdepth ${remote_folder_depth} -type d" | grep -E "${subid_regex}" | sort > "${loc_mrraw_root}/mrraw_dirlist"
fi


#compare listing from ssh with cached list of directories already processed
comm -23 <(sort "${loc_mrraw_root}/mrraw_dirlist") <(sort "${loc_mrraw_root}/mrraw_dircache") > "${loc_mrraw_root}/newsubs"

#process subjects to ignore
if [[ -f "${loc_mrraw_root}/.autopreproc_ignore" && $( awk 'END{print NR}' "${loc_mrraw_root}/newsubs" ) -gt 0 ]]; then
    #use sed to remove trailing white space or comments beginning with pound
    grep -v -f <(sed -E -e 's/[[:space:]]*$|[[:space:]]*#.*$//' "${loc_mrraw_root}/.autopreproc_ignore") "${loc_mrraw_root}/newsubs" > "${loc_mrraw_root}/newsubs_filt" || touch "${loc_mrraw_root}/newsubs_filt" #grep returns exit 1 on no match, so create empty file
    grep -f <(sed -E -e 's/[[:space:]]*$|[[:space:]]*#.*$//' "${loc_mrraw_root}/.autopreproc_ignore") "${loc_mrraw_root}/newsubs" > "${loc_mrraw_root}/newsubs_match" || touch "${loc_mrraw_root}/newsubs_match"

    if [ $( awk 'END{print NR}' "${loc_mrraw_root}/newsubs_match" ) -gt 0 ]; then
	echo "The following subjects were filtered based on .autopreproc_ignore"
	sed -e 's/^/   /' "${loc_mrraw_root}/newsubs_match" #white space pad beginning of line
	echo ""
	mv -f "${loc_mrraw_root}/newsubs_filt" "${loc_mrraw_root}/newsubs"
	rm -f "${loc_mrraw_root}/newsubs_match"
    else
	rm -f "${loc_mrraw_root}/newsubs_match" "${loc_mrraw_root}/newsubs_filt"
    fi
fi

nnew=$( awk 'END{print NR}' "${loc_mrraw_root}/newsubs" )
if [ $nnew -gt 0 ]; then

    #loop over any new subjects to process
    while read dirname
    do
	if [ ! -d "${loc_mrraw_root}/$( basename $dirname )" ]; then
	    rsync --recursive --verbose --perms --times \
		  --filter='-p .DS_Store' \
		  --filter="- /.DocumentRevisions-V100/" \
		  --filter="- /.Spotlight-V100/" \
		  --filter="- /.Trashes/" \
		  --filter="- /.TemporaryItems/" \
		  "${remote_host}:${dirname}/" \
		  "${loc_mrraw_root}/$( basename $dirname )"
	    [ -n "${postrsync_exec}" ] && eval "${postrsync_exec} ${loc_mrraw_root}/$( basename $dirname )"
	else
	    echo "   ${loc_mrraw_root}/$( basename $dirname ) exists"
	fi
    done < "${loc_mrraw_root}/newsubs"

    #add processed subjects to cache
    cat "${loc_mrraw_root}/newsubs" >> "${loc_mrraw_root}/mrraw_dircache"

else
    echo "No new subjects detected on ${remote_host} server."
fi

rm -f "${loc_mrraw_root}/newsubs"
rm -f "${loc_mrraw_root}/mrraw_dirlist" #cleanup dir listing from ssh
